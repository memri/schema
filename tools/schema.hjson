//
//  WARNING: THIS FILE IS AUTOGENERATED; DO NOT CHANGE.
//  Visit https://gitlab.memri.io/memri/schema to learn more.
//
//  schema.hjson
//
//  Copyright Â© 2020 memri. All rights reserved.
//
{
  "types": [
    /// Account.handle: A handle.
    { "item_type": "Account", "property": "handle", "value_type": "string" },
    /// Account.displayName: The name to display, for Persons this could be a first or last
    /// name, both, or a phonenumber.
    { "item_type": "Account", "property": "displayName", "value_type": "string" },
    /// Account.service: A service of any kind.
    { "item_type": "Account", "property": "service", "value_type": "string" },
    /// Account.itemType: The type or (sub)category of some Item.
    { "item_type": "Account", "property": "itemType", "value_type": "string" },
    /// Account.avatarUrl: URL to avatar image used by WhatsApp.
    { "item_type": "Account", "property": "avatarUrl", "value_type": "string" },
    /// Account.belongsTo: The Person this Item belongs to.
    { "item_type": "Account", "property": "belongsTo", "value_type": "Person" },
    /// Account.price: The price or cost of an Item, typically for one instance of the Item or
    /// the defaultQuantity.
    { "item_type": "Account", "property": "price", "value_type": "Measure" },
    /// Account.location: The location of for example where the event is happening, an
    /// organization is located, or where an action takes place.
    { "item_type": "Account", "property": "location", "value_type": "Location" },
    /// Account.organization: An organization, for instance an NGO, company or school.
    { "item_type": "Account", "property": "organization", "value_type": "Organization" },

    /// Address.latitude: The latitude of a location in WGS84 format.
    { "item_type": "Address", "property": "latitude", "value_type": "float" },
    /// Address.longitude: The longitude of a location in WGS84 format.
    { "item_type": "Address", "property": "longitude", "value_type": "float" },
    /// Address.city: A city or town.
    { "item_type": "Address", "property": "city", "value_type": "string" },
    /// Address.postalCode: The postal code. For example, 94043.
    { "item_type": "Address", "property": "postalCode", "value_type": "string" },
    /// Address.state: A state or province of a country.
    { "item_type": "Address", "property": "state", "value_type": "string" },
    /// Address.street: The street address. For example, 1600 Amphitheatre Pkwy.
    { "item_type": "Address", "property": "street", "value_type": "string" },
    /// Address.itemType: The type or (sub)category of some Item.
    { "item_type": "Address", "property": "itemType", "value_type": "string" },
    /// Address.locationAutoLookupHash: A location with a automatic lookup hash.
    { "item_type": "Address", "property": "locationAutoLookupHash", "value_type": "string" },
    /// Address.country: A country.
    { "item_type": "Address", "property": "country", "value_type": "Country" },
    /// Address.location: The location of for example where the event is happening, an
    /// organization is located, or where an action takes place.
    { "item_type": "Address", "property": "location", "value_type": "Location" },

    /// Article.title: The title of an Item.
    { "item_type": "Article", "property": "title", "value_type": "string" },
    /// Article.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Article", "property": "abstract", "value_type": "string" },
    /// Article.datePublished: Date of first broadcast/publication.
    { "item_type": "Article", "property": "datePublished", "value_type": "datetime" },
    /// Article.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Article", "property": "keyword", "value_type": "string" },
    /// Article.content: The content of an Item.
    { "item_type": "Article", "property": "content", "value_type": "string" },
    /// Article.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Article", "property": "textContent", "value_type": "string" },
    /// Article.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Article", "property": "transcript", "value_type": "string" },
    /// Article.itemType: The type or (sub)category of some Item.
    { "item_type": "Article", "property": "itemType", "value_type": "string" },
    /// Article.audio: An audio object.
    { "item_type": "Article", "property": "audio", "value_type": "Audio" },
    /// Article.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Article", "property": "citation", "value_type": "CreativeWork" },
    /// Article.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Article", "property": "contentLocation", "value_type": "Location" },
    /// Article.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Article", "property": "locationCreated", "value_type": "Location" },
    /// Article.video: A video object.
    { "item_type": "Article", "property": "video", "value_type": "Video" },
    /// Article.writtenBy: The author of this Item.
    { "item_type": "Article", "property": "writtenBy", "value_type": "Person" },
    /// Article.file: Any type of file that can be stored on disk.
    { "item_type": "Article", "property": "file", "value_type": "File" },
    /// Article.recordedAt: The event where something is recorded.
    { "item_type": "Article", "property": "recordedAt", "value_type": "Event" },
    /// Article.review: A review of the Item.
    { "item_type": "Article", "property": "review", "value_type": "Review" },
    /// Article.comment: A comment on this Item.
    { "item_type": "Article", "property": "comment", "value_type": "Comment" },

    /// Audio.bitrate: The bitrate of a media object.
    { "item_type": "Audio", "property": "bitrate", "value_type": "int" },
    /// Audio.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Audio", "property": "duration", "value_type": "int" },
    /// Audio.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Audio", "property": "endTime", "value_type": "datetime" },
    /// Audio.fileLocation: Location of the actual bytes of a File.
    { "item_type": "Audio", "property": "fileLocation", "value_type": "string" },
    /// Audio.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Audio", "property": "startTime", "value_type": "datetime" },
    /// Audio.file: Any type of file that can be stored on disk.
    { "item_type": "Audio", "property": "file", "value_type": "File" },
    /// Audio.includes: Items included within this Item. Included Items can be of any type.
    { "item_type": "Audio", "property": "includes", "value_type": "any" },
    /// Audio.caption: The caption for this object. For downloadable machine formats (closed
    /// caption, subtitles etc.) use MediaObject and indicate the encodingFormat.
    { "item_type": "Audio", "property": "caption", "value_type": "string" },
    /// Audio.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Audio", "property": "transcript", "value_type": "string" },

    /// AuditItem.date: The date related to an Item.
    { "item_type": "AuditItem", "property": "date", "value_type": "datetime" },
    /// AuditItem.content: The content of an Item.
    { "item_type": "AuditItem", "property": "content", "value_type": "string" },
    /// AuditItem.action: Some action that can be taken by some Item.
    { "item_type": "AuditItem", "property": "action", "value_type": "string" },
    /// AuditItem.appliesTo: The Item this Item applies to.
    { "item_type": "AuditItem", "property": "appliesTo", "value_type": "any" },

    /// CVUStoredDefinition.definition: The definition of an Item.
    { "item_type": "CVUStoredDefinition", "property": "definition", "value_type": "string" },
    /// CVUStoredDefinition.domain: An identification string that defines a realm of
    /// administrative autonomy, authority or control within the internet.
    { "item_type": "CVUStoredDefinition", "property": "domain", "value_type": "string" },
    /// CVUStoredDefinition.name: The name of the item.
    { "item_type": "CVUStoredDefinition", "property": "name", "value_type": "string" },
    /// CVUStoredDefinition.query: A Memri query that retrieves a set of Items from the Pod
    /// database.
    { "item_type": "CVUStoredDefinition", "property": "query", "value_type": "string" },
    /// CVUStoredDefinition.selector: TBD
    { "item_type": "CVUStoredDefinition", "property": "selector", "value_type": "string" },
    /// CVUStoredDefinition.itemType: The type or (sub)category of some Item.
    { "item_type": "CVUStoredDefinition", "property": "itemType", "value_type": "string" },

    /// Comment.title: The title of an Item.
    { "item_type": "Comment", "property": "title", "value_type": "string" },
    /// Comment.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Comment", "property": "abstract", "value_type": "string" },
    /// Comment.datePublished: Date of first broadcast/publication.
    { "item_type": "Comment", "property": "datePublished", "value_type": "datetime" },
    /// Comment.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Comment", "property": "keyword", "value_type": "string" },
    /// Comment.content: The content of an Item.
    { "item_type": "Comment", "property": "content", "value_type": "string" },
    /// Comment.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Comment", "property": "textContent", "value_type": "string" },
    /// Comment.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Comment", "property": "transcript", "value_type": "string" },
    /// Comment.itemType: The type or (sub)category of some Item.
    { "item_type": "Comment", "property": "itemType", "value_type": "string" },
    /// Comment.audio: An audio object.
    { "item_type": "Comment", "property": "audio", "value_type": "Audio" },
    /// Comment.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Comment", "property": "citation", "value_type": "CreativeWork" },
    /// Comment.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Comment", "property": "contentLocation", "value_type": "Location" },
    /// Comment.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Comment", "property": "locationCreated", "value_type": "Location" },
    /// Comment.video: A video object.
    { "item_type": "Comment", "property": "video", "value_type": "Video" },
    /// Comment.writtenBy: The author of this Item.
    { "item_type": "Comment", "property": "writtenBy", "value_type": "Person" },
    /// Comment.file: Any type of file that can be stored on disk.
    { "item_type": "Comment", "property": "file", "value_type": "File" },
    /// Comment.recordedAt: The event where something is recorded.
    { "item_type": "Comment", "property": "recordedAt", "value_type": "Event" },
    /// Comment.review: A review of the Item.
    { "item_type": "Comment", "property": "review", "value_type": "Review" },

    /// Country.latitude: The latitude of a location in WGS84 format.
    { "item_type": "Country", "property": "latitude", "value_type": "float" },
    /// Country.longitude: The longitude of a location in WGS84 format.
    { "item_type": "Country", "property": "longitude", "value_type": "float" },
    /// Country.name: The name of the item.
    { "item_type": "Country", "property": "name", "value_type": "string" },
    /// Country.flag: The flag that represents some Item, for instance a Country.
    { "item_type": "Country", "property": "flag", "value_type": "Photo" },
    /// Country.location: The location of for example where the event is happening, an
    /// organization is located, or where an action takes place.
    { "item_type": "Country", "property": "location", "value_type": "Location" },

    /// CreativeWork.title: The title of an Item.
    { "item_type": "CreativeWork", "property": "title", "value_type": "string" },
    /// CreativeWork.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "CreativeWork", "property": "abstract", "value_type": "string" },
    /// CreativeWork.datePublished: Date of first broadcast/publication.
    { "item_type": "CreativeWork", "property": "datePublished", "value_type": "datetime" },
    /// CreativeWork.keyword: Keywords or tags used to describe this content. Multiple entries
    /// in a keywords list are typically delimited by commas.
    { "item_type": "CreativeWork", "property": "keyword", "value_type": "string" },
    /// CreativeWork.content: The content of an Item.
    { "item_type": "CreativeWork", "property": "content", "value_type": "string" },
    /// CreativeWork.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "CreativeWork", "property": "textContent", "value_type": "string" },
    /// CreativeWork.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "CreativeWork", "property": "transcript", "value_type": "string" },
    /// CreativeWork.itemType: The type or (sub)category of some Item.
    { "item_type": "CreativeWork", "property": "itemType", "value_type": "string" },
    /// CreativeWork.audio: An audio object.
    { "item_type": "CreativeWork", "property": "audio", "value_type": "Audio" },
    /// CreativeWork.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "CreativeWork", "property": "citation", "value_type": "CreativeWork" },
    /// CreativeWork.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "CreativeWork", "property": "contentLocation", "value_type": "Location" },
    /// CreativeWork.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "CreativeWork", "property": "locationCreated", "value_type": "Location" },
    /// CreativeWork.video: A video object.
    { "item_type": "CreativeWork", "property": "video", "value_type": "Video" },
    /// CreativeWork.writtenBy: The author of this Item.
    { "item_type": "CreativeWork", "property": "writtenBy", "value_type": "Person" },
    /// CreativeWork.file: Any type of file that can be stored on disk.
    { "item_type": "CreativeWork", "property": "file", "value_type": "File" },
    /// CreativeWork.recordedAt: The event where something is recorded.
    { "item_type": "CreativeWork", "property": "recordedAt", "value_type": "Event" },
    /// CreativeWork.review: A review of the Item.
    { "item_type": "CreativeWork", "property": "review", "value_type": "Review" },

    /// CryptoKey.itemType: The type or (sub)category of some Item.
    { "item_type": "CryptoKey", "property": "itemType", "value_type": "string" },
    /// CryptoKey.role: A role describes the function of the item in their context.
    { "item_type": "CryptoKey", "property": "role", "value_type": "string" },
    /// CryptoKey.key: A piece of information that determines the functional output of a
    /// cryptographic algorithm.
    { "item_type": "CryptoKey", "property": "key", "value_type": "string" },
    /// CryptoKey.active: Whether the item is active.
    { "item_type": "CryptoKey", "property": "active", "value_type": "bool" },
    /// CryptoKey.name: The name of the item.
    { "item_type": "CryptoKey", "property": "name", "value_type": "string" },

    /// Device.deviceID: The Device ID, used for smartphones and tablets.
    { "item_type": "Device", "property": "deviceID", "value_type": "string" },
    /// Device.make: The make number of a device, for instance a mobile phone.
    { "item_type": "Device", "property": "make", "value_type": "string" },
    /// Device.manufacturer: The manufacturer of the Item
    { "item_type": "Device", "property": "manufacturer", "value_type": "string" },
    /// Device.model: The model number or name of an Item, for instance of a mobile phone.
    { "item_type": "Device", "property": "model", "value_type": "string" },
    /// Device.name: The name of the item.
    { "item_type": "Device", "property": "name", "value_type": "string" },
    /// Device.dateAcquired: The date this item was acquired.
    { "item_type": "Device", "property": "dateAcquired", "value_type": "datetime" },
    /// Device.dateLost: The date this Item was lost.
    { "item_type": "Device", "property": "dateLost", "value_type": "datetime" },

    /// Diet.title: The title of an Item.
    { "item_type": "Diet", "property": "title", "value_type": "string" },
    /// Diet.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Diet", "property": "abstract", "value_type": "string" },
    /// Diet.datePublished: Date of first broadcast/publication.
    { "item_type": "Diet", "property": "datePublished", "value_type": "datetime" },
    /// Diet.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Diet", "property": "keyword", "value_type": "string" },
    /// Diet.content: The content of an Item.
    { "item_type": "Diet", "property": "content", "value_type": "string" },
    /// Diet.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Diet", "property": "textContent", "value_type": "string" },
    /// Diet.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript of
    /// that object.
    { "item_type": "Diet", "property": "transcript", "value_type": "string" },
    /// Diet.itemType: The type or (sub)category of some Item.
    { "item_type": "Diet", "property": "itemType", "value_type": "string" },
    /// Diet.audio: An audio object.
    { "item_type": "Diet", "property": "audio", "value_type": "Audio" },
    /// Diet.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Diet", "property": "citation", "value_type": "CreativeWork" },
    /// Diet.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Diet", "property": "contentLocation", "value_type": "Location" },
    /// Diet.locationCreated: The location where the Item was created, which may not be the same
    /// as the location depicted in the Item.
    { "item_type": "Diet", "property": "locationCreated", "value_type": "Location" },
    /// Diet.video: A video object.
    { "item_type": "Diet", "property": "video", "value_type": "Video" },
    /// Diet.writtenBy: The author of this Item.
    { "item_type": "Diet", "property": "writtenBy", "value_type": "Person" },
    /// Diet.file: Any type of file that can be stored on disk.
    { "item_type": "Diet", "property": "file", "value_type": "File" },
    /// Diet.recordedAt: The event where something is recorded.
    { "item_type": "Diet", "property": "recordedAt", "value_type": "Event" },
    /// Diet.review: A review of the Item.
    { "item_type": "Diet", "property": "review", "value_type": "Review" },
    /// Diet.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Diet", "property": "duration", "value_type": "int" },
    /// Diet.includedProduct: An included Product.
    { "item_type": "Diet", "property": "includedProduct", "value_type": "Product" },
    /// Diet.excludedProduct: An excluded Product.
    { "item_type": "Diet", "property": "excludedProduct", "value_type": "Product" },


    /// Edge.type: Used to describe edge types in front end, will be deprecated in the near
    /// future.
    { "item_type": "Edge", "property": "type", "value_type": "string" },
    /// Edge.targetItemType: The type of the target Item, or Item to where an edge points.
    /// Opposite of sourceItemType.
    { "item_type": "Edge", "property": "targetItemType", "value_type": "string" },
    /// Edge.targetItemID: The uid of the target Item, or Item to where an Edge points. Opposite
    /// of sourceItemID
    { "item_type": "Edge", "property": "targetItemID", "value_type": "int" },
    /// Edge.sourceItemType: The type of the source Item, or Item from where an edge points.
    /// Opposite of targetItemType.
    { "item_type": "Edge", "property": "sourceItemType", "value_type": "string" },
    /// Edge.sourceItemID: The uid of the source Item, or Item from where an Edge points.
    /// Opposite of targetItemID
    { "item_type": "Edge", "property": "sourceItemID", "value_type": "int" },
    /// Edge.sequence: Used to define position in a sequence, enables ordering based on this
    /// number.
    { "item_type": "Edge", "property": "sequence", "value_type": "int" },
    /// Edge.deleted: Whether the Item is deleted.
    { "item_type": "Edge", "property": "deleted", "value_type": "bool" },
    /// Edge.version: The last version loaded from the server.
    { "item_type": "Edge", "property": "version", "value_type": "int" },
    /// Edge.edgeLabel: A label of an edge.
    { "item_type": "Edge", "property": "edgeLabel", "value_type": "string" },

    /// EmailMessage.title: The title of an Item.
    { "item_type": "EmailMessage", "property": "title", "value_type": "string" },
    /// EmailMessage.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "EmailMessage", "property": "abstract", "value_type": "string" },
    /// EmailMessage.datePublished: Date of first broadcast/publication.
    { "item_type": "EmailMessage", "property": "datePublished", "value_type": "datetime" },
    /// EmailMessage.keyword: Keywords or tags used to describe this content. Multiple entries
    /// in a keywords list are typically delimited by commas.
    { "item_type": "EmailMessage", "property": "keyword", "value_type": "string" },
    /// EmailMessage.content: The content of an Item.
    { "item_type": "EmailMessage", "property": "content", "value_type": "string" },
    /// EmailMessage.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "EmailMessage", "property": "textContent", "value_type": "string" },
    /// EmailMessage.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "EmailMessage", "property": "transcript", "value_type": "string" },
    /// EmailMessage.itemType: The type or (sub)category of some Item.
    { "item_type": "EmailMessage", "property": "itemType", "value_type": "string" },
    /// EmailMessage.audio: An audio object.
    { "item_type": "EmailMessage", "property": "audio", "value_type": "Audio" },
    /// EmailMessage.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "EmailMessage", "property": "citation", "value_type": "CreativeWork" },
    /// EmailMessage.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "EmailMessage", "property": "contentLocation", "value_type": "Location" },
    /// EmailMessage.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "EmailMessage", "property": "locationCreated", "value_type": "Location" },
    /// EmailMessage.video: A video object.
    { "item_type": "EmailMessage", "property": "video", "value_type": "Video" },
    /// EmailMessage.writtenBy: The author of this Item.
    { "item_type": "EmailMessage", "property": "writtenBy", "value_type": "Person" },
    /// EmailMessage.file: Any type of file that can be stored on disk.
    { "item_type": "EmailMessage", "property": "file", "value_type": "File" },
    /// EmailMessage.recordedAt: The event where something is recorded.
    { "item_type": "EmailMessage", "property": "recordedAt", "value_type": "Event" },
    /// EmailMessage.review: A review of the Item.
    { "item_type": "EmailMessage", "property": "review", "value_type": "Review" },
    /// EmailMessage.subject: The subject of some Item.
    { "item_type": "EmailMessage", "property": "subject", "value_type": "string" },
    /// EmailMessage.dateSent: Datetime when Item was sent.
    { "item_type": "EmailMessage", "property": "dateSent", "value_type": "datetime" },
    /// EmailMessage.dateReceived: Datetime when Item was received.
    { "item_type": "EmailMessage", "property": "dateReceived", "value_type": "datetime" },
    /// EmailMessage.service: A service of any kind.
    { "item_type": "EmailMessage", "property": "service", "value_type": "string" },
    /// EmailMessage.messageChannel: A message channel this Item belongs to, for instance a
    /// WhatsApp chat.
    { "item_type": "EmailMessage", "property": "messageChannel", "value_type": "MessageChannel" },
    /// EmailMessage.sender: The sender of an Item.
    { "item_type": "EmailMessage", "property": "sender", "value_type": "Account" },
    /// EmailMessage.receiver: The account that received, or is to receive, this Item.
    { "item_type": "EmailMessage", "property": "receiver", "value_type": "Account" },
    /// EmailMessage.cc: Accounts this Message is sent to beside the receiver.
    { "item_type": "EmailMessage", "property": "cc", "value_type": "Account" },
    /// EmailMessage.bcc: Accounts this Message is sent to beside the receiver, without showing
    /// this to the primary receiver.
    { "item_type": "EmailMessage", "property": "bcc", "value_type": "Account" },
    /// EmailMessage.replyTo: The Account that is replied to.
    { "item_type": "EmailMessage", "property": "replyTo", "value_type": "Account" },

    /// Event.audience: Intended group that would consume or receive this Item.
    { "item_type": "Event", "property": "audience", "value_type": "string" },
    /// Event.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Event", "property": "startTime", "value_type": "datetime" },
    /// Event.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Event", "property": "endTime", "value_type": "datetime" },
    /// Event.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Event", "property": "duration", "value_type": "int" },
    /// Event.eventStatus: The status of an event, for instance cancelled.
    { "item_type": "Event", "property": "eventStatus", "value_type": "string" },
    /// Event.location: The location of for example where the event is happening, an
    /// organization is located, or where an action takes place.
    { "item_type": "Event", "property": "location", "value_type": "Location" },
    /// Event.review: A review of the Item.
    { "item_type": "Event", "property": "review", "value_type": "Review" },
    /// Event.subEvent: Another (smaller) organization that is part of this Organization.
    { "item_type": "Event", "property": "subEvent", "value_type": "Organization" },
    /// Event.capacity: The capacity of an Item, for instance the maximum number of attendees of
    /// an Event.
    { "item_type": "Event", "property": "capacity", "value_type": "Measure" },

    /// ExercisePlan.title: The title of an Item.
    { "item_type": "ExercisePlan", "property": "title", "value_type": "string" },
    /// ExercisePlan.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "ExercisePlan", "property": "abstract", "value_type": "string" },
    /// ExercisePlan.datePublished: Date of first broadcast/publication.
    { "item_type": "ExercisePlan", "property": "datePublished", "value_type": "datetime" },
    /// ExercisePlan.keyword: Keywords or tags used to describe this content. Multiple entries
    /// in a keywords list are typically delimited by commas.
    { "item_type": "ExercisePlan", "property": "keyword", "value_type": "string" },
    /// ExercisePlan.content: The content of an Item.
    { "item_type": "ExercisePlan", "property": "content", "value_type": "string" },
    /// ExercisePlan.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "ExercisePlan", "property": "textContent", "value_type": "string" },
    /// ExercisePlan.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "ExercisePlan", "property": "transcript", "value_type": "string" },
    /// ExercisePlan.itemType: The type or (sub)category of some Item.
    { "item_type": "ExercisePlan", "property": "itemType", "value_type": "string" },
    /// ExercisePlan.audio: An audio object.
    { "item_type": "ExercisePlan", "property": "audio", "value_type": "Audio" },
    /// ExercisePlan.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "ExercisePlan", "property": "citation", "value_type": "CreativeWork" },
    /// ExercisePlan.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "ExercisePlan", "property": "contentLocation", "value_type": "Location" },
    /// ExercisePlan.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "ExercisePlan", "property": "locationCreated", "value_type": "Location" },
    /// ExercisePlan.video: A video object.
    { "item_type": "ExercisePlan", "property": "video", "value_type": "Video" },
    /// ExercisePlan.writtenBy: The author of this Item.
    { "item_type": "ExercisePlan", "property": "writtenBy", "value_type": "Person" },
    /// ExercisePlan.file: Any type of file that can be stored on disk.
    { "item_type": "ExercisePlan", "property": "file", "value_type": "File" },
    /// ExercisePlan.recordedAt: The event where something is recorded.
    { "item_type": "ExercisePlan", "property": "recordedAt", "value_type": "Event" },
    /// ExercisePlan.review: A review of the Item.
    { "item_type": "ExercisePlan", "property": "review", "value_type": "Review" },
    /// ExercisePlan.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "ExercisePlan", "property": "duration", "value_type": "int" },
    /// ExercisePlan.repetitions: The number of times something is repeated.
    { "item_type": "ExercisePlan", "property": "repetitions", "value_type": "int" },
    /// ExercisePlan.workload: The amount of energy something takes.
    { "item_type": "ExercisePlan", "property": "workload", "value_type": "Measure" },
    /// ExercisePlan.frequency: The frequency of an Item.
    { "item_type": "ExercisePlan", "property": "frequency", "value_type": "Frequency" },

    /// File.sha256: The sha256 hash of a resource.
    { "item_type": "File", "property": "sha256", "value_type": "string" },
    /// File.nonce: A cryptographic nonce https://en.wikipedia.org/wiki/Cryptographic_nonce
    { "item_type": "File", "property": "nonce", "value_type": "string" },
    /// File.key: A piece of information that determines the functional output of a
    /// cryptographic algorithm.
    { "item_type": "File", "property": "key", "value_type": "string" },
    /// File.filename: The filename of a resource.
    { "item_type": "File", "property": "filename", "value_type": "string" },
    /// File.resource: A universal resource location
    { "item_type": "File", "property": "resource", "value_type": "Resource" },
    /// File.usedBy: An Item this Item is used by.
    { "item_type": "File", "property": "usedBy", "value_type": "any" },

    /// Frequency.occurrences: The number of occurrences.
    { "item_type": "Frequency", "property": "occurrences", "value_type": "string" },

    /// Game.title: The title of an Item.
    { "item_type": "Game", "property": "title", "value_type": "string" },
    /// Game.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Game", "property": "abstract", "value_type": "string" },
    /// Game.datePublished: Date of first broadcast/publication.
    { "item_type": "Game", "property": "datePublished", "value_type": "datetime" },
    /// Game.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Game", "property": "keyword", "value_type": "string" },
    /// Game.content: The content of an Item.
    { "item_type": "Game", "property": "content", "value_type": "string" },
    /// Game.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Game", "property": "textContent", "value_type": "string" },
    /// Game.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript of
    /// that object.
    { "item_type": "Game", "property": "transcript", "value_type": "string" },
    /// Game.itemType: The type or (sub)category of some Item.
    { "item_type": "Game", "property": "itemType", "value_type": "string" },
    /// Game.audio: An audio object.
    { "item_type": "Game", "property": "audio", "value_type": "Audio" },
    /// Game.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Game", "property": "citation", "value_type": "CreativeWork" },
    /// Game.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Game", "property": "contentLocation", "value_type": "Location" },
    /// Game.locationCreated: The location where the Item was created, which may not be the same
    /// as the location depicted in the Item.
    { "item_type": "Game", "property": "locationCreated", "value_type": "Location" },
    /// Game.video: A video object.
    { "item_type": "Game", "property": "video", "value_type": "Video" },
    /// Game.writtenBy: The author of this Item.
    { "item_type": "Game", "property": "writtenBy", "value_type": "Person" },
    /// Game.file: Any type of file that can be stored on disk.
    { "item_type": "Game", "property": "file", "value_type": "File" },
    /// Game.recordedAt: The event where something is recorded.
    { "item_type": "Game", "property": "recordedAt", "value_type": "Event" },
    /// Game.review: A review of the Item.
    { "item_type": "Game", "property": "review", "value_type": "Review" },

    /// GenericAttribute.name: The name of the item.
    { "item_type": "GenericAttribute", "property": "name", "value_type": "string" },
    /// GenericAttribute.boolValue: A boolean value.
    { "item_type": "GenericAttribute", "property": "boolValue", "value_type": "bool" },
    /// GenericAttribute.datetimeValue: A datetime value.
    { "item_type": "GenericAttribute", "property": "datetimeValue", "value_type": "datetime" },
    /// GenericAttribute.floatValue: A floating point value.
    { "item_type": "GenericAttribute", "property": "floatValue", "value_type": "float" },
    /// GenericAttribute.intValue: An integer value.
    { "item_type": "GenericAttribute", "property": "intValue", "value_type": "int" },
    /// GenericAttribute.stringValue: A string value.
    { "item_type": "GenericAttribute", "property": "stringValue", "value_type": "string" },

    /// HowTo.title: The title of an Item.
    { "item_type": "HowTo", "property": "title", "value_type": "string" },
    /// HowTo.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "HowTo", "property": "abstract", "value_type": "string" },
    /// HowTo.datePublished: Date of first broadcast/publication.
    { "item_type": "HowTo", "property": "datePublished", "value_type": "datetime" },
    /// HowTo.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "HowTo", "property": "keyword", "value_type": "string" },
    /// HowTo.content: The content of an Item.
    { "item_type": "HowTo", "property": "content", "value_type": "string" },
    /// HowTo.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "HowTo", "property": "textContent", "value_type": "string" },
    /// HowTo.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "HowTo", "property": "transcript", "value_type": "string" },
    /// HowTo.itemType: The type or (sub)category of some Item.
    { "item_type": "HowTo", "property": "itemType", "value_type": "string" },
    /// HowTo.audio: An audio object.
    { "item_type": "HowTo", "property": "audio", "value_type": "Audio" },
    /// HowTo.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "HowTo", "property": "citation", "value_type": "CreativeWork" },
    /// HowTo.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "HowTo", "property": "contentLocation", "value_type": "Location" },
    /// HowTo.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "HowTo", "property": "locationCreated", "value_type": "Location" },
    /// HowTo.video: A video object.
    { "item_type": "HowTo", "property": "video", "value_type": "Video" },
    /// HowTo.writtenBy: The author of this Item.
    { "item_type": "HowTo", "property": "writtenBy", "value_type": "Person" },
    /// HowTo.file: Any type of file that can be stored on disk.
    { "item_type": "HowTo", "property": "file", "value_type": "File" },
    /// HowTo.recordedAt: The event where something is recorded.
    { "item_type": "HowTo", "property": "recordedAt", "value_type": "Event" },
    /// HowTo.review: A review of the Item.
    { "item_type": "HowTo", "property": "review", "value_type": "Review" },

    /// Importer.name: The name of the item.
    { "item_type": "Importer", "property": "name", "value_type": "string" },
    /// Importer.repository: Repository associated with this item, e.g. used by Pod to start
    /// appropriate integrator container.
    { "item_type": "Importer", "property": "repository", "value_type": "string" },
    /// Importer.dataType: The type of the data this Item acts on.
    { "item_type": "Importer", "property": "dataType", "value_type": "string" },
    /// Importer.icon: A graphic symbol to represent some Item.
    { "item_type": "Importer", "property": "icon", "value_type": "string" },
    /// Importer.bundleImage: An image in the Xcode bundle.
    { "item_type": "Importer", "property": "bundleImage", "value_type": "string" },
    /// Importer.importerRun: A run of a certain Importer, that defines the details of the
    /// specific import.
    { "item_type": "Importer", "property": "importerRun", "value_type": "ImporterRun" },

    /// ImporterRun.name: The name of the item.
    { "item_type": "ImporterRun", "property": "name", "value_type": "string" },
    /// ImporterRun.repository: Repository associated with this item, e.g. used by Pod to start
    /// appropriate integrator container.
    { "item_type": "ImporterRun", "property": "repository", "value_type": "string" },
    /// ImporterRun.progress: The progress an Item made. Encoded as a float number from 0.0 to
    /// 1.0.
    { "item_type": "ImporterRun", "property": "progress", "value_type": "float" },
    /// ImporterRun.dataType: The type of the data this Item acts on.
    { "item_type": "ImporterRun", "property": "dataType", "value_type": "string" },
    /// ImporterRun.username: Username of an importer.
    { "item_type": "ImporterRun", "property": "username", "value_type": "string" },
    /// ImporterRun.password: Password for a username.
    { "item_type": "ImporterRun", "property": "password", "value_type": "string" },
    /// ImporterRun.runStatus: The status of a run, (running, error, etc).
    { "item_type": "ImporterRun", "property": "runStatus", "value_type": "string" },
    /// ImporterRun.errorMessage: Description of the error
    { "item_type": "ImporterRun", "property": "errorMessage", "value_type": "string" },
    /// ImporterRun.progressMessage: Message describing the progress of a process.
    { "item_type": "ImporterRun", "property": "progressMessage", "value_type": "string" },
    /// ImporterRun.importer: An Importer is used to import data from an external source to the
    /// Pod database.
    { "item_type": "ImporterRun", "property": "importer", "value_type": "Importer" },

    /// Indexer.name: The name of the item.
    { "item_type": "Indexer", "property": "name", "value_type": "string" },
    /// Indexer.repository: Repository associated with this item, e.g. used by Pod to start
    /// appropriate integrator container.
    { "item_type": "Indexer", "property": "repository", "value_type": "string" },
    /// Indexer.icon: A graphic symbol to represent some Item.
    { "item_type": "Indexer", "property": "icon", "value_type": "string" },
    /// Indexer.query: A Memri query that retrieves a set of Items from the Pod database.
    { "item_type": "Indexer", "property": "query", "value_type": "string" },
    /// Indexer.bundleImage: An image in the Xcode bundle.
    { "item_type": "Indexer", "property": "bundleImage", "value_type": "string" },
    /// Indexer.runDestination: The destination of a run.
    { "item_type": "Indexer", "property": "runDestination", "value_type": "string" },
    /// Indexer.indexerClass: The type of an Indexer.
    { "item_type": "Indexer", "property": "indexerClass", "value_type": "string" },
    /// Indexer.indexerRun: A run of a certain Indexer, that defines the details of the specific
    /// indexing.
    { "item_type": "Indexer", "property": "indexerRun", "value_type": "IndexerRun" },

    /// IndexerRun.name: The name of the item.
    { "item_type": "IndexerRun", "property": "name", "value_type": "string" },
    /// IndexerRun.repository: Repository associated with this item, e.g. used by Pod to start
    /// appropriate integrator container.
    { "item_type": "IndexerRun", "property": "repository", "value_type": "string" },
    /// IndexerRun.query: A Memri query that retrieves a set of Items from the Pod database.
    { "item_type": "IndexerRun", "property": "query", "value_type": "string" },
    /// IndexerRun.progress: The progress an Item made. Encoded as a float number from 0.0 to
    /// 1.0.
    { "item_type": "IndexerRun", "property": "progress", "value_type": "float" },
    /// IndexerRun.targetDataType: The type of data this Item targets.
    { "item_type": "IndexerRun", "property": "targetDataType", "value_type": "string" },
    /// IndexerRun.runStatus: The status of a run, (running, error, etc).
    { "item_type": "IndexerRun", "property": "runStatus", "value_type": "string" },
    /// IndexerRun.errorMessage: Description of the error
    { "item_type": "IndexerRun", "property": "errorMessage", "value_type": "string" },
    /// IndexerRun.progressMessage: Message describing the progress of a process.
    { "item_type": "IndexerRun", "property": "progressMessage", "value_type": "string" },
    /// IndexerRun.indexer: An Indexer is used to enrich data in the Pod database.
    { "item_type": "IndexerRun", "property": "indexer", "value_type": "Indexer" },

    /// Industry.itemType: The type or (sub)category of some Item.
    { "item_type": "Industry", "property": "itemType", "value_type": "string" },

    /// Integrator.name: The name of the item.
    { "item_type": "Integrator", "property": "name", "value_type": "string" },
    /// Integrator.repository: Repository associated with this item, e.g. used by Pod to start
    /// appropriate integrator container.
    { "item_type": "Integrator", "property": "repository", "value_type": "string" },

    /// Invoice.file: Any type of file that can be stored on disk.
    { "item_type": "Invoice", "property": "file", "value_type": "File" },
    /// Invoice.transaction: An agreement between a buyer and a seller to exchange an asset for
    /// payment.
    { "item_type": "Invoice", "property": "transaction", "value_type": "Transaction" },

    /// Item.dateAccessed: Last access date of the Item.
    { "item_type": "Item", "property": "dateAccessed", "value_type": "datetime" },
    /// Item.dateCreated: Creation date of the Item.
    { "item_type": "Item", "property": "dateCreated", "value_type": "datetime" },
    /// Item.dateModified: Last modification date of the Item.
    { "item_type": "Item", "property": "dateModified", "value_type": "datetime" },
    /// Item.deleted: Whether the Item is deleted.
    { "item_type": "Item", "property": "deleted", "value_type": "bool" },
    /// Item.externalId: The identifier of an external source.
    { "item_type": "Item", "property": "externalId", "value_type": "string" },
    /// Item.itemDescription: A description of the item.
    { "item_type": "Item", "property": "itemDescription", "value_type": "string" },
    /// Item.starred: Whether the Item is starred.
    { "item_type": "Item", "property": "starred", "value_type": "bool" },
    /// Item.version: The last version loaded from the server.
    { "item_type": "Item", "property": "version", "value_type": "int" },
    /// Item.uid: The unique identifier of the Item set by the pod.
    { "item_type": "Item", "property": "uid", "value_type": "int" },
    /// Item.importJson: Data that cannot directly be imported in the appropriate Items (yet),
    /// in JSON format 
    { "item_type": "Item", "property": "importJson", "value_type": "string" },
    /// Item.allEdges: A collection of all edges of an Item.
    { "item_type": "Item", "property": "allEdges", "value_type": "Edge" },

    /// Label.color: The color of this Item.
    { "item_type": "Label", "property": "color", "value_type": "string" },
    /// Label.name: The name of the item.
    { "item_type": "Label", "property": "name", "value_type": "string" },
    /// Label.comment: A comment on this Item.
    { "item_type": "Label", "property": "comment", "value_type": "Comment" },
    /// Label.appliesTo: The Item this Item applies to.
    { "item_type": "Label", "property": "appliesTo", "value_type": "any" },

    /// Lead.offer: A potential offer.
    { "item_type": "Lead", "property": "offer", "value_type": "Offer" },

    /// Location.latitude: The latitude of a location in WGS84 format.
    { "item_type": "Location", "property": "latitude", "value_type": "float" },
    /// Location.longitude: The longitude of a location in WGS84 format.
    { "item_type": "Location", "property": "longitude", "value_type": "float" },

    /// Material.name: The name of the item.
    { "item_type": "Material", "property": "name", "value_type": "string" },
    /// Material.defaultQuantity: The default quantity, for instance 1 g or 0.25 L
    { "item_type": "Material", "property": "defaultQuantity", "value_type": "string" },
    /// Material.price: The price or cost of an Item, typically for one instance of the Item or
    /// the defaultQuantity.
    { "item_type": "Material", "property": "price", "value_type": "Measure" },

    /// Measure.definition: The definition of an Item.
    { "item_type": "Measure", "property": "definition", "value_type": "string" },
    /// Measure.symbol: A symbol, for instance to represent a Unit or Measure.
    { "item_type": "Measure", "property": "symbol", "value_type": "string" },
    /// Measure.intValue: An integer value.
    { "item_type": "Measure", "property": "intValue", "value_type": "int" },
    /// Measure.floatValue: A floating point value.
    { "item_type": "Measure", "property": "floatValue", "value_type": "float" },
    /// Measure.stringValue: A string value.
    { "item_type": "Measure", "property": "stringValue", "value_type": "string" },
    /// Measure.datetimeValue: A datetime value.
    { "item_type": "Measure", "property": "datetimeValue", "value_type": "datetime" },
    /// Measure.boolValue: A boolean value.
    { "item_type": "Measure", "property": "boolValue", "value_type": "bool" },
    /// Measure.unit: A unit, typically from International System of Units (SI).
    { "item_type": "Measure", "property": "unit", "value_type": "Unit" },

    /// MediaObject.bitrate: The bitrate of a media object.
    { "item_type": "MediaObject", "property": "bitrate", "value_type": "int" },
    /// MediaObject.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "MediaObject", "property": "duration", "value_type": "int" },
    /// MediaObject.endTime: The endTime of something. For a reserved event or service, the time
    /// that it is expected to end. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the end of a clip within a larger file.
    { "item_type": "MediaObject", "property": "endTime", "value_type": "datetime" },
    /// MediaObject.fileLocation: Location of the actual bytes of a File.
    { "item_type": "MediaObject", "property": "fileLocation", "value_type": "string" },
    /// MediaObject.startTime: The startTime of something. For a reserved event or service, the
    /// time that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "MediaObject", "property": "startTime", "value_type": "datetime" },
    /// MediaObject.file: Any type of file that can be stored on disk.
    { "item_type": "MediaObject", "property": "file", "value_type": "File" },
    /// MediaObject.includes: Items included within this Item. Included Items can be of any
    /// type.
    { "item_type": "MediaObject", "property": "includes", "value_type": "any" },

    /// MedicalCondition.itemType: The type or (sub)category of some Item.
    { "item_type": "MedicalCondition", "property": "itemType", "value_type": "string" },
    /// MedicalCondition.name: The name of the item.
    { "item_type": "MedicalCondition", "property": "name", "value_type": "string" },

    /// Message.title: The title of an Item.
    { "item_type": "Message", "property": "title", "value_type": "string" },
    /// Message.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Message", "property": "abstract", "value_type": "string" },
    /// Message.datePublished: Date of first broadcast/publication.
    { "item_type": "Message", "property": "datePublished", "value_type": "datetime" },
    /// Message.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Message", "property": "keyword", "value_type": "string" },
    /// Message.content: The content of an Item.
    { "item_type": "Message", "property": "content", "value_type": "string" },
    /// Message.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Message", "property": "textContent", "value_type": "string" },
    /// Message.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Message", "property": "transcript", "value_type": "string" },
    /// Message.itemType: The type or (sub)category of some Item.
    { "item_type": "Message", "property": "itemType", "value_type": "string" },
    /// Message.audio: An audio object.
    { "item_type": "Message", "property": "audio", "value_type": "Audio" },
    /// Message.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Message", "property": "citation", "value_type": "CreativeWork" },
    /// Message.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Message", "property": "contentLocation", "value_type": "Location" },
    /// Message.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Message", "property": "locationCreated", "value_type": "Location" },
    /// Message.video: A video object.
    { "item_type": "Message", "property": "video", "value_type": "Video" },
    /// Message.writtenBy: The author of this Item.
    { "item_type": "Message", "property": "writtenBy", "value_type": "Person" },
    /// Message.file: Any type of file that can be stored on disk.
    { "item_type": "Message", "property": "file", "value_type": "File" },
    /// Message.recordedAt: The event where something is recorded.
    { "item_type": "Message", "property": "recordedAt", "value_type": "Event" },
    /// Message.review: A review of the Item.
    { "item_type": "Message", "property": "review", "value_type": "Review" },
    /// Message.subject: The subject of some Item.
    { "item_type": "Message", "property": "subject", "value_type": "string" },
    /// Message.dateSent: Datetime when Item was sent.
    { "item_type": "Message", "property": "dateSent", "value_type": "datetime" },
    /// Message.dateReceived: Datetime when Item was received.
    { "item_type": "Message", "property": "dateReceived", "value_type": "datetime" },
    /// Message.service: A service of any kind.
    { "item_type": "Message", "property": "service", "value_type": "string" },
    /// Message.messageChannel: A message channel this Item belongs to, for instance a WhatsApp
    /// chat.
    { "item_type": "Message", "property": "messageChannel", "value_type": "MessageChannel" },
    /// Message.sender: The sender of an Item.
    { "item_type": "Message", "property": "sender", "value_type": "Account" },
    /// Message.receiver: The account that received, or is to receive, this Item.
    { "item_type": "Message", "property": "receiver", "value_type": "Account" },

    /// MessageChannel.name: The name of the item.
    { "item_type": "MessageChannel", "property": "name", "value_type": "string" },
    /// MessageChannel.topic: The topic of an item, for instance a Chat.
    { "item_type": "MessageChannel", "property": "topic", "value_type": "string" },
    /// MessageChannel.encrypted: Whether the item is encrypted.
    { "item_type": "MessageChannel", "property": "encrypted", "value_type": "bool" },
    /// MessageChannel.photo: A photo object.
    { "item_type": "MessageChannel", "property": "photo", "value_type": "Photo" },
    /// MessageChannel.receiver: The account that received, or is to receive, this Item.
    { "item_type": "MessageChannel", "property": "receiver", "value_type": "Account" },


    /// MovingImage.title: The title of an Item.
    { "item_type": "MovingImage", "property": "title", "value_type": "string" },
    /// MovingImage.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "MovingImage", "property": "abstract", "value_type": "string" },
    /// MovingImage.datePublished: Date of first broadcast/publication.
    { "item_type": "MovingImage", "property": "datePublished", "value_type": "datetime" },
    /// MovingImage.keyword: Keywords or tags used to describe this content. Multiple entries in
    /// a keywords list are typically delimited by commas.
    { "item_type": "MovingImage", "property": "keyword", "value_type": "string" },
    /// MovingImage.content: The content of an Item.
    { "item_type": "MovingImage", "property": "content", "value_type": "string" },
    /// MovingImage.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "MovingImage", "property": "textContent", "value_type": "string" },
    /// MovingImage.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "MovingImage", "property": "transcript", "value_type": "string" },
    /// MovingImage.itemType: The type or (sub)category of some Item.
    { "item_type": "MovingImage", "property": "itemType", "value_type": "string" },
    /// MovingImage.audio: An audio object.
    { "item_type": "MovingImage", "property": "audio", "value_type": "Audio" },
    /// MovingImage.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "MovingImage", "property": "citation", "value_type": "CreativeWork" },
    /// MovingImage.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "MovingImage", "property": "contentLocation", "value_type": "Location" },
    /// MovingImage.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "MovingImage", "property": "locationCreated", "value_type": "Location" },
    /// MovingImage.video: A video object.
    { "item_type": "MovingImage", "property": "video", "value_type": "Video" },
    /// MovingImage.writtenBy: The author of this Item.
    { "item_type": "MovingImage", "property": "writtenBy", "value_type": "Person" },
    /// MovingImage.file: Any type of file that can be stored on disk.
    { "item_type": "MovingImage", "property": "file", "value_type": "File" },
    /// MovingImage.recordedAt: The event where something is recorded.
    { "item_type": "MovingImage", "property": "recordedAt", "value_type": "Event" },
    /// MovingImage.review: A review of the Item.
    { "item_type": "MovingImage", "property": "review", "value_type": "Review" },

    /// NavigationItem.title: The title of an Item.
    { "item_type": "NavigationItem", "property": "title", "value_type": "string" },
    /// NavigationItem.sessionName: Name of a Session.
    { "item_type": "NavigationItem", "property": "sessionName", "value_type": "string" },
    /// NavigationItem.sequence: Used to define position in a sequence, enables ordering based
    /// on this number.
    { "item_type": "NavigationItem", "property": "sequence", "value_type": "int" },
    /// NavigationItem.itemType: The type or (sub)category of some Item.
    { "item_type": "NavigationItem", "property": "itemType", "value_type": "string" },

    /// Network.name: The name of the item.
    { "item_type": "Network", "property": "name", "value_type": "string" },
    /// Network.organization: An organization, for instance an NGO, company or school.
    { "item_type": "Network", "property": "organization", "value_type": "Organization" },
    /// Network.resource: A universal resource location
    { "item_type": "Network", "property": "resource", "value_type": "Resource" },
    /// Network.website: A WebSite is a set of related web pages and other items typically
    /// served from a single web domain and accessible via URLs.
    { "item_type": "Network", "property": "website", "value_type": "Website" },

    /// Note.title: The title of an Item.
    { "item_type": "Note", "property": "title", "value_type": "string" },
    /// Note.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Note", "property": "abstract", "value_type": "string" },
    /// Note.datePublished: Date of first broadcast/publication.
    { "item_type": "Note", "property": "datePublished", "value_type": "datetime" },
    /// Note.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Note", "property": "keyword", "value_type": "string" },
    /// Note.content: The content of an Item.
    { "item_type": "Note", "property": "content", "value_type": "string" },
    /// Note.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Note", "property": "textContent", "value_type": "string" },
    /// Note.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript of
    /// that object.
    { "item_type": "Note", "property": "transcript", "value_type": "string" },
    /// Note.itemType: The type or (sub)category of some Item.
    { "item_type": "Note", "property": "itemType", "value_type": "string" },
    /// Note.audio: An audio object.
    { "item_type": "Note", "property": "audio", "value_type": "Audio" },
    /// Note.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Note", "property": "citation", "value_type": "CreativeWork" },
    /// Note.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Note", "property": "contentLocation", "value_type": "Location" },
    /// Note.locationCreated: The location where the Item was created, which may not be the same
    /// as the location depicted in the Item.
    { "item_type": "Note", "property": "locationCreated", "value_type": "Location" },
    /// Note.video: A video object.
    { "item_type": "Note", "property": "video", "value_type": "Video" },
    /// Note.writtenBy: The author of this Item.
    { "item_type": "Note", "property": "writtenBy", "value_type": "Person" },
    /// Note.file: Any type of file that can be stored on disk.
    { "item_type": "Note", "property": "file", "value_type": "File" },
    /// Note.recordedAt: The event where something is recorded.
    { "item_type": "Note", "property": "recordedAt", "value_type": "Event" },
    /// Note.review: A review of the Item.
    { "item_type": "Note", "property": "review", "value_type": "Review" },
    /// Note.comment: A comment on this Item.
    { "item_type": "Note", "property": "comment", "value_type": "Comment" },
    /// Note.noteList: List occurs in Note.
    { "item_type": "Note", "property": "noteList", "value_type": "NoteList" },

    /// NoteList.title: The title of an Item.
    { "item_type": "NoteList", "property": "title", "value_type": "string" },
    /// NoteList.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "NoteList", "property": "abstract", "value_type": "string" },
    /// NoteList.datePublished: Date of first broadcast/publication.
    { "item_type": "NoteList", "property": "datePublished", "value_type": "datetime" },
    /// NoteList.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "NoteList", "property": "keyword", "value_type": "string" },
    /// NoteList.content: The content of an Item.
    { "item_type": "NoteList", "property": "content", "value_type": "string" },
    /// NoteList.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "NoteList", "property": "textContent", "value_type": "string" },
    /// NoteList.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "NoteList", "property": "transcript", "value_type": "string" },
    /// NoteList.itemType: The type or (sub)category of some Item.
    { "item_type": "NoteList", "property": "itemType", "value_type": "string" },
    /// NoteList.audio: An audio object.
    { "item_type": "NoteList", "property": "audio", "value_type": "Audio" },
    /// NoteList.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "NoteList", "property": "citation", "value_type": "CreativeWork" },
    /// NoteList.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "NoteList", "property": "contentLocation", "value_type": "Location" },
    /// NoteList.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "NoteList", "property": "locationCreated", "value_type": "Location" },
    /// NoteList.video: A video object.
    { "item_type": "NoteList", "property": "video", "value_type": "Video" },
    /// NoteList.writtenBy: The author of this Item.
    { "item_type": "NoteList", "property": "writtenBy", "value_type": "Person" },
    /// NoteList.file: Any type of file that can be stored on disk.
    { "item_type": "NoteList", "property": "file", "value_type": "File" },
    /// NoteList.recordedAt: The event where something is recorded.
    { "item_type": "NoteList", "property": "recordedAt", "value_type": "Event" },
    /// NoteList.review: A review of the Item.
    { "item_type": "NoteList", "property": "review", "value_type": "Review" },
    /// NoteList.category: Category of this item.
    { "item_type": "NoteList", "property": "category", "value_type": "string" },
    /// NoteList.span: Range of an item in a piece of text.
    { "item_type": "NoteList", "property": "span", "value_type": "Span" },
    /// NoteList.itemSpan: span of an item in a list that lives in text.
    { "item_type": "NoteList", "property": "itemSpan", "value_type": "Span" },
    /// NoteList.note: Note of an item.
    { "item_type": "NoteList", "property": "note", "value_type": "Note" },

    /// Offer.transaction: An agreement between a buyer and a seller to exchange an asset for
    /// payment.
    { "item_type": "Offer", "property": "transaction", "value_type": "Transaction" },

    /// OpeningHours.timeFrame: A timeframe.
    { "item_type": "OpeningHours", "property": "timeFrame", "value_type": "TimeFrame" },


    /// Organization.name: The name of the item.
    { "item_type": "Organization", "property": "name", "value_type": "string" },
    /// Organization.dateFounded: Date that the Item was founded.
    { "item_type": "Organization", "property": "dateFounded", "value_type": "datetime" },
    /// Organization.areaServed: The area that this Item operates in.
    { "item_type": "Organization", "property": "areaServed", "value_type": "string" },
    /// Organization.taxId: A fiscal identifier.
    { "item_type": "Organization", "property": "taxId", "value_type": "string" },
    /// Organization.address: Physical address of the event or place.
    { "item_type": "Organization", "property": "address", "value_type": "Address" },
    /// Organization.foundingLocation: The place where the Item was founded.
    { "item_type": "Organization", "property": "foundingLocation", "value_type": "Location" },
    /// Organization.logo: A logo that belongs to an Item
    { "item_type": "Organization", "property": "logo", "value_type": "Photo" },
    /// Organization.review: A review of the Item.
    { "item_type": "Organization", "property": "review", "value_type": "Review" },
    /// Organization.subOrganization: Another (smaller) Event that takes place at this Event
    { "item_type": "Organization", "property": "subOrganization", "value_type": "Event" },
    /// Organization.performsAt: The Event this Item organizes.
    { "item_type": "Organization", "property": "performsAt", "value_type": "Event" },
    /// Organization.attends: The Event this Item attends.
    { "item_type": "Organization", "property": "attends", "value_type": "Event" },
    /// Organization.organizes: The Event this Item attends.
    { "item_type": "Organization", "property": "organizes", "value_type": "Event" },
    /// Organization.openingHours: Hours that an organization is open.
    { "item_type": "Organization", "property": "openingHours", "value_type": "OpeningHours" },
    /// Organization.industry: A sector that produces goods or related services within an
    /// economy.
    { "item_type": "Organization", "property": "industry", "value_type": "Industry" },
    /// Organization.buyer: The buying party in a transaction.
    { "item_type": "Organization", "property": "buyer", "value_type": "Transaction" },
    /// Organization.seller: The buying party in a transaction.
    { "item_type": "Organization", "property": "seller", "value_type": "Transaction" },

    /// PerformingArt.title: The title of an Item.
    { "item_type": "PerformingArt", "property": "title", "value_type": "string" },
    /// PerformingArt.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "PerformingArt", "property": "abstract", "value_type": "string" },
    /// PerformingArt.datePublished: Date of first broadcast/publication.
    { "item_type": "PerformingArt", "property": "datePublished", "value_type": "datetime" },
    /// PerformingArt.keyword: Keywords or tags used to describe this content. Multiple entries
    /// in a keywords list are typically delimited by commas.
    { "item_type": "PerformingArt", "property": "keyword", "value_type": "string" },
    /// PerformingArt.content: The content of an Item.
    { "item_type": "PerformingArt", "property": "content", "value_type": "string" },
    /// PerformingArt.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "PerformingArt", "property": "textContent", "value_type": "string" },
    /// PerformingArt.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "PerformingArt", "property": "transcript", "value_type": "string" },
    /// PerformingArt.itemType: The type or (sub)category of some Item.
    { "item_type": "PerformingArt", "property": "itemType", "value_type": "string" },
    /// PerformingArt.audio: An audio object.
    { "item_type": "PerformingArt", "property": "audio", "value_type": "Audio" },
    /// PerformingArt.citation: A citation or reference to another creative work, such as
    /// another publication, web page, scholarly article, etc.
    { "item_type": "PerformingArt", "property": "citation", "value_type": "CreativeWork" },
    /// PerformingArt.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "PerformingArt", "property": "contentLocation", "value_type": "Location" },
    /// PerformingArt.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "PerformingArt", "property": "locationCreated", "value_type": "Location" },
    /// PerformingArt.video: A video object.
    { "item_type": "PerformingArt", "property": "video", "value_type": "Video" },
    /// PerformingArt.writtenBy: The author of this Item.
    { "item_type": "PerformingArt", "property": "writtenBy", "value_type": "Person" },
    /// PerformingArt.file: Any type of file that can be stored on disk.
    { "item_type": "PerformingArt", "property": "file", "value_type": "File" },
    /// PerformingArt.recordedAt: The event where something is recorded.
    { "item_type": "PerformingArt", "property": "recordedAt", "value_type": "Event" },
    /// PerformingArt.review: A review of the Item.
    { "item_type": "PerformingArt", "property": "review", "value_type": "Review" },

    /// Person.birthDate: Date of birth.
    { "item_type": "Person", "property": "birthDate", "value_type": "datetime" },
    /// Person.email: Email address.
    { "item_type": "Person", "property": "email", "value_type": "string" },
    /// Person.deathDate: Date of death.
    { "item_type": "Person", "property": "deathDate", "value_type": "datetime" },
    /// Person.firstName: Family name. In the U.S., the last name of an Person. This can be used
    /// along with givenName instead of the name property.
    { "item_type": "Person", "property": "firstName", "value_type": "string" },
    /// Person.lastName: Given name. In the U.S., the first name of a Person. This can be used
    /// along with familyName instead of the name property.
    { "item_type": "Person", "property": "lastName", "value_type": "string" },
    /// Person.gender: Gender of something, typically a Person, but possibly also fictional
    /// characters, animals, etc.
    { "item_type": "Person", "property": "gender", "value_type": "string" },
    /// Person.sexualOrientation: The sexual orientation of a person.
    { "item_type": "Person", "property": "sexualOrientation", "value_type": "string" },
    /// Person.displayName: The name to display, for Persons this could be a first or last name,
    /// both, or a phonenumber.
    { "item_type": "Person", "property": "displayName", "value_type": "string" },
    /// Person.role: A role describes the function of the item in their context.
    { "item_type": "Person", "property": "role", "value_type": "string" },
    /// Person.address: Physical address of the event or place.
    { "item_type": "Person", "property": "address", "value_type": "Address" },
    /// Person.birthPlace: The place where the person was born.
    { "item_type": "Person", "property": "birthPlace", "value_type": "Location" },
    /// Person.deathPlace: The place where someone or something died, typically a Person.
    { "item_type": "Person", "property": "deathPlace", "value_type": "Location" },
    /// Person.profilePicture: A photo that corresponds to some Person or other kind of
    /// profile.
    { "item_type": "Person", "property": "profilePicture", "value_type": "Photo" },
    /// Person.relationship: A relation between two persons.
    { "item_type": "Person", "property": "relationship", "value_type": "Person" },
    /// Person.hasPhoneNumber: A phone number that belongs to an Item.
    { "item_type": "Person", "property": "hasPhoneNumber", "value_type": "PhoneNumber" },
    /// Person.website: A WebSite is a set of related web pages and other items typically served
    /// from a single web domain and accessible via URLs.
    { "item_type": "Person", "property": "website", "value_type": "Website" },
    /// Person.industry: A sector that produces goods or related services within an economy.
    { "item_type": "Person", "property": "industry", "value_type": "Industry" },
    /// Person.cryptoKey: A crypto key used in a cryptography protocol.
    { "item_type": "Person", "property": "cryptoKey", "value_type": "CryptoKey" },
    /// Person.account: An account or subscription, for instance for some online service, or a
    /// bank account or wallet.
    { "item_type": "Person", "property": "account", "value_type": "Account" },
    /// Person.diet: A strategy of regulating the intake of food to achieve or maintain a
    /// specific health-related goal.
    { "item_type": "Person", "property": "diet", "value_type": "Diet" },
    /// Person.medicalCondition: Any condition of the human body that affects the normal
    /// functioning of a person, whether physically or mentally. Includes diseases, injuries,
    /// disabilities, disorders, syndromes, etc.
    { "item_type": "Person", "property": "medicalCondition", "value_type": "MedicalCondition" },
    /// Person.memberOf: The organization this Item is a member of.
    { "item_type": "Person", "property": "memberOf", "value_type": "Organization" },
    /// Person.performsAt: The Event this Item organizes.
    { "item_type": "Person", "property": "performsAt", "value_type": "Event" },
    /// Person.attends: The Event this Item attends.
    { "item_type": "Person", "property": "attends", "value_type": "Event" },
    /// Person.organizes: The Event this Item attends.
    { "item_type": "Person", "property": "organizes", "value_type": "Event" },
    /// Person.founded: The Organization this Item has founded.
    { "item_type": "Person", "property": "founded", "value_type": "Organization" },
    /// Person.buyer: The buying party in a transaction.
    { "item_type": "Person", "property": "buyer", "value_type": "Transaction" },
    /// Person.seller: The buying party in a transaction.
    { "item_type": "Person", "property": "seller", "value_type": "Transaction" },

    /// PhoneNumber.phoneNumber: A phone number with an area code.
    { "item_type": "PhoneNumber", "property": "phoneNumber", "value_type": "string" },
    /// PhoneNumber.itemType: The type or (sub)category of some Item.
    { "item_type": "PhoneNumber", "property": "itemType", "value_type": "string" },

    /// Photo.bitrate: The bitrate of a media object.
    { "item_type": "Photo", "property": "bitrate", "value_type": "int" },
    /// Photo.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Photo", "property": "duration", "value_type": "int" },
    /// Photo.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Photo", "property": "endTime", "value_type": "datetime" },
    /// Photo.fileLocation: Location of the actual bytes of a File.
    { "item_type": "Photo", "property": "fileLocation", "value_type": "string" },
    /// Photo.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Photo", "property": "startTime", "value_type": "datetime" },
    /// Photo.file: Any type of file that can be stored on disk.
    { "item_type": "Photo", "property": "file", "value_type": "File" },
    /// Photo.includes: Items included within this Item. Included Items can be of any type.
    { "item_type": "Photo", "property": "includes", "value_type": "any" },
    /// Photo.caption: The caption for this object. For downloadable machine formats (closed
    /// caption, subtitles etc.) use MediaObject and indicate the encodingFormat.
    { "item_type": "Photo", "property": "caption", "value_type": "string" },
    /// Photo.exifData: Exif data of an image file.
    { "item_type": "Photo", "property": "exifData", "value_type": "string" },
    /// Photo.name: The name of the item.
    { "item_type": "Photo", "property": "name", "value_type": "string" },
    /// Photo.thumbnail: Thumbnail image for an Item, typically an image or video.
    { "item_type": "Photo", "property": "thumbnail", "value_type": "File" },

    /// PhysicalEntity.belongsTo: The Person this Item belongs to.
    { "item_type": "PhysicalEntity", "property": "belongsTo", "value_type": "Person" },
    /// PhysicalEntity.instanceOf: An instance of an Item, for instance the PhysicalEntity
    /// instance of a Book.
    { "item_type": "PhysicalEntity", "property": "instanceOf", "value_type": "any" },
    /// PhysicalEntity.location: The location of for example where the event is happening, an
    /// organization is located, or where an action takes place.
    { "item_type": "PhysicalEntity", "property": "location", "value_type": "Location" },

    /// Product.audience: Intended group that would consume or receive this Item.
    { "item_type": "Product", "property": "audience", "value_type": "string" },
    /// Product.color: The color of this Item.
    { "item_type": "Product", "property": "color", "value_type": "string" },
    /// Product.manufacturer: The manufacturer of the Item
    { "item_type": "Product", "property": "manufacturer", "value_type": "string" },
    /// Product.model: The model number or name of an Item, for instance of a mobile phone.
    { "item_type": "Product", "property": "model", "value_type": "string" },
    /// Product.pattern: A repeated decorative design.
    { "item_type": "Product", "property": "pattern", "value_type": "string" },
    /// Product.dateAcquired: The date this item was acquired.
    { "item_type": "Product", "property": "dateAcquired", "value_type": "datetime" },
    /// Product.productCondition: A description of the condition of a product, for instance
    /// new.
    { "item_type": "Product", "property": "productCondition", "value_type": "string" },
    /// Product.dateProduced: The date the Item was produced.
    { "item_type": "Product", "property": "dateProduced", "value_type": "datetime" },
    /// Product.datePublished: Date of first broadcast/publication.
    { "item_type": "Product", "property": "datePublished", "value_type": "datetime" },
    /// Product.service: A service of any kind.
    { "item_type": "Product", "property": "service", "value_type": "string" },
    /// Product.material: The material the Item is (partially) made of.
    { "item_type": "Product", "property": "material", "value_type": "Material" },
    /// Product.productCode: A type of code related to a Product.
    { "item_type": "Product", "property": "productCode", "value_type": "ProductCode" },
    /// Product.review: A review of the Item.
    { "item_type": "Product", "property": "review", "value_type": "Review" },
    /// Product.accessoryOrSparePartFor: Product fo which this Item is a spare part or
    /// accessory.
    { "item_type": "Product", "property": "accessoryOrSparePartFor", "value_type": "Product" },
    /// Product.consumableBy: Product that consumes this Item, for instance the printer that
    /// takes this ink cartridge.
    { "item_type": "Product", "property": "consumableBy", "value_type": "Product" },
    /// Product.price: The price or cost of an Item, typically for one instance of the Item or
    /// the defaultQuantity.
    { "item_type": "Product", "property": "price", "value_type": "Measure" },

    /// ProductCode.productCodeType: An identifier type for Products, for instance a UPC or
    /// GTIN.
    { "item_type": "ProductCode", "property": "productCodeType", "value_type": "string" },
    /// ProductCode.productNumber: An identifier for Products, for instance a UPC or GTIN.
    { "item_type": "ProductCode", "property": "productNumber", "value_type": "string" },

    /// Receipt.dateDue: The date something is due.
    { "item_type": "Receipt", "property": "dateDue", "value_type": "datetime" },
    /// Receipt.file: Any type of file that can be stored on disk.
    { "item_type": "Receipt", "property": "file", "value_type": "File" },
    /// Receipt.transaction: An agreement between a buyer and a seller to exchange an asset for
    /// payment.
    { "item_type": "Receipt", "property": "transaction", "value_type": "Transaction" },

    /// Recipe.title: The title of an Item.
    { "item_type": "Recipe", "property": "title", "value_type": "string" },
    /// Recipe.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Recipe", "property": "abstract", "value_type": "string" },
    /// Recipe.datePublished: Date of first broadcast/publication.
    { "item_type": "Recipe", "property": "datePublished", "value_type": "datetime" },
    /// Recipe.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Recipe", "property": "keyword", "value_type": "string" },
    /// Recipe.content: The content of an Item.
    { "item_type": "Recipe", "property": "content", "value_type": "string" },
    /// Recipe.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Recipe", "property": "textContent", "value_type": "string" },
    /// Recipe.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Recipe", "property": "transcript", "value_type": "string" },
    /// Recipe.itemType: The type or (sub)category of some Item.
    { "item_type": "Recipe", "property": "itemType", "value_type": "string" },
    /// Recipe.audio: An audio object.
    { "item_type": "Recipe", "property": "audio", "value_type": "Audio" },
    /// Recipe.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Recipe", "property": "citation", "value_type": "CreativeWork" },
    /// Recipe.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Recipe", "property": "contentLocation", "value_type": "Location" },
    /// Recipe.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Recipe", "property": "locationCreated", "value_type": "Location" },
    /// Recipe.video: A video object.
    { "item_type": "Recipe", "property": "video", "value_type": "Video" },
    /// Recipe.writtenBy: The author of this Item.
    { "item_type": "Recipe", "property": "writtenBy", "value_type": "Person" },
    /// Recipe.file: Any type of file that can be stored on disk.
    { "item_type": "Recipe", "property": "file", "value_type": "File" },
    /// Recipe.recordedAt: The event where something is recorded.
    { "item_type": "Recipe", "property": "recordedAt", "value_type": "Event" },
    /// Recipe.review: A review of the Item.
    { "item_type": "Recipe", "property": "review", "value_type": "Review" },
    /// Recipe.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Recipe", "property": "duration", "value_type": "int" },
    /// Recipe.instructions: A set of steps to reach a certain goal.
    { "item_type": "Recipe", "property": "instructions", "value_type": "string" },
    /// Recipe.ingredient: An ingredient of an Item.
    { "item_type": "Recipe", "property": "ingredient", "value_type": "Product" },
    /// Recipe.price: The price or cost of an Item, typically for one instance of the Item or
    /// the defaultQuantity.
    { "item_type": "Recipe", "property": "price", "value_type": "Measure" },
    /// Recipe.yields: The amount produced or financial return.
    { "item_type": "Recipe", "property": "yields", "value_type": "Measure" },
    /// Recipe.toolRequired: Some tool required by an Item.
    { "item_type": "Recipe", "property": "toolRequired", "value_type": "Product" },

    /// Recording.title: The title of an Item.
    { "item_type": "Recording", "property": "title", "value_type": "string" },
    /// Recording.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "Recording", "property": "abstract", "value_type": "string" },
    /// Recording.datePublished: Date of first broadcast/publication.
    { "item_type": "Recording", "property": "datePublished", "value_type": "datetime" },
    /// Recording.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Recording", "property": "keyword", "value_type": "string" },
    /// Recording.content: The content of an Item.
    { "item_type": "Recording", "property": "content", "value_type": "string" },
    /// Recording.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Recording", "property": "textContent", "value_type": "string" },
    /// Recording.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "Recording", "property": "transcript", "value_type": "string" },
    /// Recording.itemType: The type or (sub)category of some Item.
    { "item_type": "Recording", "property": "itemType", "value_type": "string" },
    /// Recording.audio: An audio object.
    { "item_type": "Recording", "property": "audio", "value_type": "Audio" },
    /// Recording.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Recording", "property": "citation", "value_type": "CreativeWork" },
    /// Recording.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "Recording", "property": "contentLocation", "value_type": "Location" },
    /// Recording.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Recording", "property": "locationCreated", "value_type": "Location" },
    /// Recording.video: A video object.
    { "item_type": "Recording", "property": "video", "value_type": "Video" },
    /// Recording.writtenBy: The author of this Item.
    { "item_type": "Recording", "property": "writtenBy", "value_type": "Person" },
    /// Recording.file: Any type of file that can be stored on disk.
    { "item_type": "Recording", "property": "file", "value_type": "File" },
    /// Recording.recordedAt: The event where something is recorded.
    { "item_type": "Recording", "property": "recordedAt", "value_type": "Event" },
    /// Recording.review: A review of the Item.
    { "item_type": "Recording", "property": "review", "value_type": "Review" },

    /// Reservation.dateReserved: Reservation date.
    { "item_type": "Reservation", "property": "dateReserved", "value_type": "datetime" },
    /// Reservation.reservationStatus: The status of a reservation, for instance cancelled.
    { "item_type": "Reservation", "property": "reservationStatus", "value_type": "string" },
    /// Reservation.organization: An organization, for instance an NGO, company or school.
    { "item_type": "Reservation", "property": "organization", "value_type": "Organization" },
    /// Reservation.route: A route from one Location to another, using some ModeOfTransport.
    { "item_type": "Reservation", "property": "route", "value_type": "Route" },
    /// Reservation.reservedBy: The Person who made this reservation.
    { "item_type": "Reservation", "property": "reservedBy", "value_type": "Person" },
    /// Reservation.reservedFor: A Person for whom this reservation was made.
    { "item_type": "Reservation", "property": "reservedFor", "value_type": "Person" },
    /// Reservation.price: The price or cost of an Item, typically for one instance of the Item
    /// or the defaultQuantity.
    { "item_type": "Reservation", "property": "price", "value_type": "Measure" },

    /// Resource.url: The url property represents the Uniform Resource Location (URL) of a
    /// resource.
    { "item_type": "Resource", "property": "url", "value_type": "string" },
    /// Resource.usedBy: An Item this Item is used by.
    { "item_type": "Resource", "property": "usedBy", "value_type": "any" },

    /// Review.title: The title of an Item.
    { "item_type": "Review", "property": "title", "value_type": "string" },
    /// Review.abstract: An abstract is a short description that summarizes an Items content.
    { "item_type": "Review", "property": "abstract", "value_type": "string" },
    /// Review.datePublished: Date of first broadcast/publication.
    { "item_type": "Review", "property": "datePublished", "value_type": "datetime" },
    /// Review.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "Review", "property": "keyword", "value_type": "string" },
    /// Review.content: The content of an Item.
    { "item_type": "Review", "property": "content", "value_type": "string" },
    /// Review.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "Review", "property": "textContent", "value_type": "string" },
    /// Review.transcript: If this MediaObject is an AudioObject or VideoObject, the transcript
    /// of that object.
    { "item_type": "Review", "property": "transcript", "value_type": "string" },
    /// Review.itemType: The type or (sub)category of some Item.
    { "item_type": "Review", "property": "itemType", "value_type": "string" },
    /// Review.audio: An audio object.
    { "item_type": "Review", "property": "audio", "value_type": "Audio" },
    /// Review.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "Review", "property": "citation", "value_type": "CreativeWork" },
    /// Review.contentLocation: The location depicted or described in the content. For example,
    /// the location in a photograph or painting.
    { "item_type": "Review", "property": "contentLocation", "value_type": "Location" },
    /// Review.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "Review", "property": "locationCreated", "value_type": "Location" },
    /// Review.video: A video object.
    { "item_type": "Review", "property": "video", "value_type": "Video" },
    /// Review.writtenBy: The author of this Item.
    { "item_type": "Review", "property": "writtenBy", "value_type": "Person" },
    /// Review.file: Any type of file that can be stored on disk.
    { "item_type": "Review", "property": "file", "value_type": "File" },
    /// Review.recordedAt: The event where something is recorded.
    { "item_type": "Review", "property": "recordedAt", "value_type": "Event" },
    /// Review.review: A review of the Item.
    { "item_type": "Review", "property": "review", "value_type": "Review" },
    /// Review.rating: A rating is an evaluation using some Measure, for instance 1 to 5 stars.
    { "item_type": "Review", "property": "rating", "value_type": "Measure" },

    /// Route.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Route", "property": "startTime", "value_type": "datetime" },
    /// Route.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Route", "property": "endTime", "value_type": "datetime" },
    /// Route.modeOfTransport: A way of transportation, for instance a bus or airplane.
    { "item_type": "Route", "property": "modeOfTransport", "value_type": "ModeOfTransport" },
    /// Route.startLocation: The location where some Item starts, for instance the start of a
    /// route.
    { "item_type": "Route", "property": "startLocation", "value_type": "Location" },
    /// Route.endLocation: The location where some Item ends, for instance the destination of a
    /// route.
    { "item_type": "Route", "property": "endLocation", "value_type": "Location" },
    /// Route.price: The price or cost of an Item, typically for one instance of the Item or the
    /// defaultQuantity.
    { "item_type": "Route", "property": "price", "value_type": "Measure" },
    /// Route.receipt: A Receipt is a confirmation of a transaction.
    { "item_type": "Route", "property": "receipt", "value_type": "Receipt" },
    /// Route.ticket: A ticket for an Event or Route.
    { "item_type": "Route", "property": "ticket", "value_type": "File" },

    /// Setting.key: A piece of information that determines the functional output of a
    /// cryptographic algorithm.
    { "item_type": "Setting", "property": "key", "value_type": "string" },
    /// Setting.json: A string in JSON (JavaScript Object Notation) format.
    { "item_type": "Setting", "property": "json", "value_type": "string" },

    /// Span.startIdx: Start position of an element.
    { "item_type": "Span", "property": "startIdx", "value_type": "int" },
    /// Span.endIdx: End position of an element.
    { "item_type": "Span", "property": "endIdx", "value_type": "int" },

    /// TimeFrame.startTime: The startTime of something. For a reserved event or service, the
    /// time that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "TimeFrame", "property": "startTime", "value_type": "datetime" },
    /// TimeFrame.endTime: The endTime of something. For a reserved event or service, the time
    /// that it is expected to end. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the end of a clip within a larger file.
    { "item_type": "TimeFrame", "property": "endTime", "value_type": "datetime" },

    /// Transaction.orderStatus: Whether the Item is deleted.
    { "item_type": "Transaction", "property": "orderStatus", "value_type": "bool" },
    /// Transaction.orderNumber: Identifier of a transaction.
    { "item_type": "Transaction", "property": "orderNumber", "value_type": "string" },
    /// Transaction.discountCode: Can be used to get a discount.
    { "item_type": "Transaction", "property": "discountCode", "value_type": "string" },
    /// Transaction.dateOrdered: The date this Item was lost.
    { "item_type": "Transaction", "property": "dateOrdered", "value_type": "datetime" },
    /// Transaction.dateExecuted: Date of execution.
    { "item_type": "Transaction", "property": "dateExecuted", "value_type": "datetime" },
    /// Transaction.purchaseLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "Transaction", "property": "purchaseLocation", "value_type": "Location" },
    /// Transaction.product: Any Product.
    { "item_type": "Transaction", "property": "product", "value_type": "Product" },
    /// Transaction.billingAddress: The address associated with financial purchases.
    { "item_type": "Transaction", "property": "billingAddress", "value_type": "Address" },
    /// Transaction.payedWithAccount: The Account used to pay.
    { "item_type": "Transaction", "property": "payedWithAccount", "value_type": "Account" },
    /// Transaction.discount: A discount or price reduction.
    { "item_type": "Transaction", "property": "discount", "value_type": "Measure" },

    /// Trip.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Trip", "property": "startTime", "value_type": "datetime" },
    /// Trip.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Trip", "property": "endTime", "value_type": "datetime" },
    /// Trip.route: A route from one Location to another, using some ModeOfTransport.
    { "item_type": "Trip", "property": "route", "value_type": "Route" },
    /// Trip.startLocation: The location where some Item starts, for instance the start of a
    /// route.
    { "item_type": "Trip", "property": "startLocation", "value_type": "Location" },
    /// Trip.endLocation: The location where some Item ends, for instance the destination of a
    /// route.
    { "item_type": "Trip", "property": "endLocation", "value_type": "Location" },
    /// Trip.price: The price or cost of an Item, typically for one instance of the Item or the
    /// defaultQuantity.
    { "item_type": "Trip", "property": "price", "value_type": "Measure" },

    /// Unit.symbol: A symbol, for instance to represent a Unit or Measure.
    { "item_type": "Unit", "property": "symbol", "value_type": "string" },
    /// Unit.name: The name of the item.
    { "item_type": "Unit", "property": "name", "value_type": "string" },

    /// Video.bitrate: The bitrate of a media object.
    { "item_type": "Video", "property": "bitrate", "value_type": "int" },
    /// Video.duration: The duration of an Item, for instance an event or an Audio file.
    { "item_type": "Video", "property": "duration", "value_type": "int" },
    /// Video.endTime: The endTime of something. For a reserved event or service, the time that
    /// it is expected to end. For actions that span a period of time, when the action was performed.
    /// e.g. John wrote a book from January to December. For media, including audio and video, it's the
    /// time offset of the end of a clip within a larger file.
    { "item_type": "Video", "property": "endTime", "value_type": "datetime" },
    /// Video.fileLocation: Location of the actual bytes of a File.
    { "item_type": "Video", "property": "fileLocation", "value_type": "string" },
    /// Video.startTime: The startTime of something. For a reserved event or service, the time
    /// that it is expected to start. For actions that span a period of time, when the action was
    /// performed. e.g. John wrote a book from January to December. For media, including audio and
    /// video, it's the time offset of the start of a clip within a larger file.
    { "item_type": "Video", "property": "startTime", "value_type": "datetime" },
    /// Video.file: Any type of file that can be stored on disk.
    { "item_type": "Video", "property": "file", "value_type": "File" },
    /// Video.includes: Items included within this Item. Included Items can be of any type.
    { "item_type": "Video", "property": "includes", "value_type": "any" },
    /// Video.caption: The caption for this object. For downloadable machine formats (closed
    /// caption, subtitles etc.) use MediaObject and indicate the encodingFormat.
    { "item_type": "Video", "property": "caption", "value_type": "string" },
    /// Video.exifData: Exif data of an image file.
    { "item_type": "Video", "property": "exifData", "value_type": "string" },
    /// Video.name: The name of the item.
    { "item_type": "Video", "property": "name", "value_type": "string" },
    /// Video.thumbnail: Thumbnail image for an Item, typically an image or video.
    { "item_type": "Video", "property": "thumbnail", "value_type": "File" },

    /// VisualArt.title: The title of an Item.
    { "item_type": "VisualArt", "property": "title", "value_type": "string" },
    /// VisualArt.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "VisualArt", "property": "abstract", "value_type": "string" },
    /// VisualArt.datePublished: Date of first broadcast/publication.
    { "item_type": "VisualArt", "property": "datePublished", "value_type": "datetime" },
    /// VisualArt.keyword: Keywords or tags used to describe this content. Multiple entries in a
    /// keywords list are typically delimited by commas.
    { "item_type": "VisualArt", "property": "keyword", "value_type": "string" },
    /// VisualArt.content: The content of an Item.
    { "item_type": "VisualArt", "property": "content", "value_type": "string" },
    /// VisualArt.textContent: The plain text content of an Item, without styling or syntax for
    /// Markdown, HTML, etc.
    { "item_type": "VisualArt", "property": "textContent", "value_type": "string" },
    /// VisualArt.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "VisualArt", "property": "transcript", "value_type": "string" },
    /// VisualArt.itemType: The type or (sub)category of some Item.
    { "item_type": "VisualArt", "property": "itemType", "value_type": "string" },
    /// VisualArt.audio: An audio object.
    { "item_type": "VisualArt", "property": "audio", "value_type": "Audio" },
    /// VisualArt.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "VisualArt", "property": "citation", "value_type": "CreativeWork" },
    /// VisualArt.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "VisualArt", "property": "contentLocation", "value_type": "Location" },
    /// VisualArt.locationCreated: The location where the Item was created, which may not be the
    /// same as the location depicted in the Item.
    { "item_type": "VisualArt", "property": "locationCreated", "value_type": "Location" },
    /// VisualArt.video: A video object.
    { "item_type": "VisualArt", "property": "video", "value_type": "Video" },
    /// VisualArt.writtenBy: The author of this Item.
    { "item_type": "VisualArt", "property": "writtenBy", "value_type": "Person" },
    /// VisualArt.file: Any type of file that can be stored on disk.
    { "item_type": "VisualArt", "property": "file", "value_type": "File" },
    /// VisualArt.recordedAt: The event where something is recorded.
    { "item_type": "VisualArt", "property": "recordedAt", "value_type": "Event" },
    /// VisualArt.review: A review of the Item.
    { "item_type": "VisualArt", "property": "review", "value_type": "Review" },

    /// Vote.itemType: The type or (sub)category of some Item.
    { "item_type": "Vote", "property": "itemType", "value_type": "string" },
    /// Vote.option: An option for some choice, for instance a Vote.
    { "item_type": "Vote", "property": "option", "value_type": "Option" },

    /// VoteAction.dateExecuted: Date of execution.
    { "item_type": "VoteAction", "property": "dateExecuted", "value_type": "datetime" },
    /// VoteAction.vote: An occasion where a choice is made choose between two or more options,
    /// for instance an election.
    { "item_type": "VoteAction", "property": "vote", "value_type": "Vote" },
    /// VoteAction.usedBy: An Item this Item is used by.
    { "item_type": "VoteAction", "property": "usedBy", "value_type": "any" },
    /// VoteAction.choice: A chosen Option.
    { "item_type": "VoteAction", "property": "choice", "value_type": "Option" },

    /// Website.itemType: The type or (sub)category of some Item.
    { "item_type": "Website", "property": "itemType", "value_type": "string" },
    /// Website.url: The url property represents the Uniform Resource Location (URL) of a
    /// resource.
    { "item_type": "Website", "property": "url", "value_type": "string" },

    /// WrittenWork.title: The title of an Item.
    { "item_type": "WrittenWork", "property": "title", "value_type": "string" },
    /// WrittenWork.abstract: An abstract is a short description that summarizes an Items
    /// content.
    { "item_type": "WrittenWork", "property": "abstract", "value_type": "string" },
    /// WrittenWork.datePublished: Date of first broadcast/publication.
    { "item_type": "WrittenWork", "property": "datePublished", "value_type": "datetime" },
    /// WrittenWork.keyword: Keywords or tags used to describe this content. Multiple entries in
    /// a keywords list are typically delimited by commas.
    { "item_type": "WrittenWork", "property": "keyword", "value_type": "string" },
    /// WrittenWork.content: The content of an Item.
    { "item_type": "WrittenWork", "property": "content", "value_type": "string" },
    /// WrittenWork.textContent: The plain text content of an Item, without styling or syntax
    /// for Markdown, HTML, etc.
    { "item_type": "WrittenWork", "property": "textContent", "value_type": "string" },
    /// WrittenWork.transcript: If this MediaObject is an AudioObject or VideoObject, the
    /// transcript of that object.
    { "item_type": "WrittenWork", "property": "transcript", "value_type": "string" },
    /// WrittenWork.itemType: The type or (sub)category of some Item.
    { "item_type": "WrittenWork", "property": "itemType", "value_type": "string" },
    /// WrittenWork.audio: An audio object.
    { "item_type": "WrittenWork", "property": "audio", "value_type": "Audio" },
    /// WrittenWork.citation: A citation or reference to another creative work, such as another
    /// publication, web page, scholarly article, etc.
    { "item_type": "WrittenWork", "property": "citation", "value_type": "CreativeWork" },
    /// WrittenWork.contentLocation: The location depicted or described in the content. For
    /// example, the location in a photograph or painting.
    { "item_type": "WrittenWork", "property": "contentLocation", "value_type": "Location" },
    /// WrittenWork.locationCreated: The location where the Item was created, which may not be
    /// the same as the location depicted in the Item.
    { "item_type": "WrittenWork", "property": "locationCreated", "value_type": "Location" },
    /// WrittenWork.video: A video object.
    { "item_type": "WrittenWork", "property": "video", "value_type": "Video" },
    /// WrittenWork.writtenBy: The author of this Item.
    { "item_type": "WrittenWork", "property": "writtenBy", "value_type": "Person" },
    /// WrittenWork.file: Any type of file that can be stored on disk.
    { "item_type": "WrittenWork", "property": "file", "value_type": "File" },
    /// WrittenWork.recordedAt: The event where something is recorded.
    { "item_type": "WrittenWork", "property": "recordedAt", "value_type": "Event" },
    /// WrittenWork.review: A review of the Item.
    { "item_type": "WrittenWork", "property": "review", "value_type": "Review" },

  ]
}
